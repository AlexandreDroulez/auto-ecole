{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/alexandredroulez/Desktop/auto-ecole/src/components/Input/index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState } from 'react';\nimport { ContainerGenericInput, StyledInput, StyledLabel, StyledImage } from './styledComponents';\nimport show from '../../../assets/svg/eye.svg';\nimport notShow from '../../../assets/svg/show.svg';\n\nconst GenericInput = ({\n  label,\n  name,\n  type,\n  required,\n  minLength,\n  maxLength,\n  placeholder,\n  register\n}) => {\n  const {\n    0: showPassword,\n    1: setShowPassword\n  } = useState(false);\n  return /*#__PURE__*/_jsxDEV(ContainerGenericInput, {\n    children: [/*#__PURE__*/_jsxDEV(StyledInput, _objectSpread({\n      type: showPassword === false ? type : 'text',\n      id: name,\n      name: name,\n      required: required,\n      minLength: minLength,\n      maxLength: maxLength,\n      placeholder: placeholder\n    }, register(`${name}`, {\n      required: true,\n      maxLength: 80\n    })), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StyledLabel, {\n      htmlFor: name,\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), type === 'password' && /*#__PURE__*/_jsxDEV(StyledImage, {\n      src: showPassword ? show : notShow,\n      onClick: () => setShowPassword(!showPassword)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n\nexport default GenericInput;","map":{"version":3,"sources":["/Users/alexandredroulez/Desktop/auto-ecole/src/components/Input/index.js"],"names":["React","useState","ContainerGenericInput","StyledInput","StyledLabel","StyledImage","show","notShow","GenericInput","label","name","type","required","minLength","maxLength","placeholder","register","showPassword","setShowPassword"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,qBAAT,EAAgCC,WAAhC,EAA6CC,WAA7C,EAA0DC,WAA1D,QAA6E,oBAA7E;AACA,OAAOC,IAAP,MAAiB,6BAAjB;AACA,OAAOC,OAAP,MAAoB,8BAApB;;AAEA,MAAMC,YAAY,GAAG,CAAC;AACpBC,EAAAA,KADoB;AAEpBC,EAAAA,IAFoB;AAGpBC,EAAAA,IAHoB;AAIpBC,EAAAA,QAJoB;AAKpBC,EAAAA,SALoB;AAMpBC,EAAAA,SANoB;AAOpBC,EAAAA,WAPoB;AAQpBC,EAAAA;AARoB,CAAD,KASf;AACJ,QAAM;AAAA,OAACC,YAAD;AAAA,OAAeC;AAAf,MAAkCjB,QAAQ,CAAC,KAAD,CAAhD;AACA,sBACE,QAAC,qBAAD;AAAA,4BACE,QAAC,WAAD;AACE,MAAA,IAAI,EAAEgB,YAAY,KAAK,KAAjB,GAAyBN,IAAzB,GAAgC,MADxC;AAEE,MAAA,EAAE,EAAED,IAFN;AAGE,MAAA,IAAI,EAAEA,IAHR;AAIE,MAAA,QAAQ,EAAEE,QAJZ;AAKE,MAAA,SAAS,EAAEC,SALb;AAME,MAAA,SAAS,EAAEC,SANb;AAOE,MAAA,WAAW,EAAEC;AAPf,OAQMC,QAAQ,CAAE,GAAEN,IAAK,EAAT,EAAY;AAAEE,MAAAA,QAAQ,EAAE,IAAZ;AAAkBE,MAAAA,SAAS,EAAE;AAA7B,KAAZ,CARd;AAAA;AAAA;AAAA;AAAA,YADF,eAWE,QAAC,WAAD;AAAa,MAAA,OAAO,EAAEJ,IAAtB;AAAA,gBAA6BD;AAA7B;AAAA;AAAA;AAAA;AAAA,YAXF,EAaGE,IAAI,KAAK,UAAT,iBACC,QAAC,WAAD;AACE,MAAA,GAAG,EAAEM,YAAY,GAAGX,IAAH,GAAUC,OAD7B;AAEE,MAAA,OAAO,EAAE,MAAMW,eAAe,CAAC,CAACD,YAAF;AAFhC;AAAA;AAAA;AAAA;AAAA,YAdJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAsBD,CAjCD;;AAmCA,eAAeT,YAAf","sourcesContent":["import React, { useState } from 'react';\nimport { ContainerGenericInput, StyledInput, StyledLabel, StyledImage } from './styledComponents';\nimport show from '../../../assets/svg/eye.svg';\nimport notShow from '../../../assets/svg/show.svg';\n\nconst GenericInput = ({\n  label,\n  name,\n  type,\n  required,\n  minLength,\n  maxLength,\n  placeholder,\n  register,\n}) => {\n  const [showPassword, setShowPassword] = useState(false);\n  return (\n    <ContainerGenericInput>\n      <StyledInput\n        type={showPassword === false ? type : 'text'}\n        id={name}\n        name={name}\n        required={required}\n        minLength={minLength}\n        maxLength={maxLength}\n        placeholder={placeholder}\n        {...register(`${name}`, { required: true, maxLength: 80 })}\n      />\n      <StyledLabel htmlFor={name}>{label}</StyledLabel>\n\n      {type === 'password' && (\n        <StyledImage\n          src={showPassword ? show : notShow}\n          onClick={() => setShowPassword(!showPassword)}\n        />\n      )}\n    </ContainerGenericInput>\n  );\n};\n\nexport default GenericInput;\n"]},"metadata":{},"sourceType":"module"}