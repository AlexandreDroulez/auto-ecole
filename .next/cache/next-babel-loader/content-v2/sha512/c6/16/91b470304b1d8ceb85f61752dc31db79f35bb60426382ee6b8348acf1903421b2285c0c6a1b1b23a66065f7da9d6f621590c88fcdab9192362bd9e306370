{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/alexandredroulez/Desktop/auto-ecole/src/components/Input/index.js\";\nimport React, { useState } from 'react';\nimport { ContainerGenericInput, StyledInput, StyledLabel, StyledImage } from './styledComponents';\nimport show from '../../../assets/svg/eye.svg';\nimport notShow from '../../../assets/svg/show.svg';\n\nconst GenericInput = ({\n  label,\n  name,\n  type,\n  required,\n  minLength,\n  maxLength,\n  placeholder\n}) => {\n  const {\n    0: showPassword,\n    1: setShowPassword\n  } = useState(false);\n  return /*#__PURE__*/_jsxDEV(ContainerGenericInput, {\n    children: [/*#__PURE__*/_jsxDEV(StyledInput, {\n      type: type === 'password' && showPassword === false ? type : 'text',\n      id: name,\n      name: name,\n      required: required,\n      minLength: minLength,\n      maxLength: maxLength,\n      placeholder: placeholder\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StyledLabel, {\n      htmlFor: name,\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), type === 'password' && /*#__PURE__*/_jsxDEV(StyledImage, {\n      src: showPassword ? show : notShow,\n      onClick: () => setShowPassword(!showPassword)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n};\n\nexport default GenericInput;","map":{"version":3,"sources":["/Users/alexandredroulez/Desktop/auto-ecole/src/components/Input/index.js"],"names":["React","useState","ContainerGenericInput","StyledInput","StyledLabel","StyledImage","show","notShow","GenericInput","label","name","type","required","minLength","maxLength","placeholder","showPassword","setShowPassword"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,qBAAT,EAAgCC,WAAhC,EAA6CC,WAA7C,EAA0DC,WAA1D,QAA6E,oBAA7E;AACA,OAAOC,IAAP,MAAiB,6BAAjB;AACA,OAAOC,OAAP,MAAoB,8BAApB;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,IAAT;AAAeC,EAAAA,IAAf;AAAqBC,EAAAA,QAArB;AAA+BC,EAAAA,SAA/B;AAA0CC,EAAAA,SAA1C;AAAqDC,EAAAA;AAArD,CAAD,KAAwE;AAC3F,QAAM;AAAA,OAACC,YAAD;AAAA,OAAeC;AAAf,MAAkChB,QAAQ,CAAC,KAAD,CAAhD;AACA,sBACE,QAAC,qBAAD;AAAA,4BACE,QAAC,WAAD;AACE,MAAA,IAAI,EAAEU,IAAI,KAAK,UAAT,IAAuBK,YAAY,KAAK,KAAxC,GAAgDL,IAAhD,GAAuD,MAD/D;AAEE,MAAA,EAAE,EAAED,IAFN;AAGE,MAAA,IAAI,EAAEA,IAHR;AAIE,MAAA,QAAQ,EAAEE,QAJZ;AAKE,MAAA,SAAS,EAAEC,SALb;AAME,MAAA,SAAS,EAAEC,SANb;AAOE,MAAA,WAAW,EAAEC;AAPf;AAAA;AAAA;AAAA;AAAA,YADF,eAUE,QAAC,WAAD;AAAa,MAAA,OAAO,EAAEL,IAAtB;AAAA,gBAA6BD;AAA7B;AAAA;AAAA;AAAA;AAAA,YAVF,EAYGE,IAAI,KAAK,UAAT,iBACC,QAAC,WAAD;AACE,MAAA,GAAG,EAAEK,YAAY,GAAGV,IAAH,GAAUC,OAD7B;AAEE,MAAA,OAAO,EAAE,MAAMU,eAAe,CAAC,CAACD,YAAF;AAFhC;AAAA;AAAA;AAAA;AAAA,YAbJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD,CAvBD;;AAyBA,eAAeR,YAAf","sourcesContent":["import React, { useState } from 'react';\nimport { ContainerGenericInput, StyledInput, StyledLabel, StyledImage } from './styledComponents';\nimport show from '../../../assets/svg/eye.svg';\nimport notShow from '../../../assets/svg/show.svg';\n\nconst GenericInput = ({ label, name, type, required, minLength, maxLength, placeholder }) => {\n  const [showPassword, setShowPassword] = useState(false);\n  return (\n    <ContainerGenericInput>\n      <StyledInput\n        type={type === 'password' && showPassword === false ? type : 'text'}\n        id={name}\n        name={name}\n        required={required}\n        minLength={minLength}\n        maxLength={maxLength}\n        placeholder={placeholder}\n      />\n      <StyledLabel htmlFor={name}>{label}</StyledLabel>\n\n      {type === 'password' && (\n        <StyledImage\n          src={showPassword ? show : notShow}\n          onClick={() => setShowPassword(!showPassword)}\n        />\n      )}\n    </ContainerGenericInput>\n  );\n};\n\nexport default GenericInput;\n"]},"metadata":{},"sourceType":"module"}