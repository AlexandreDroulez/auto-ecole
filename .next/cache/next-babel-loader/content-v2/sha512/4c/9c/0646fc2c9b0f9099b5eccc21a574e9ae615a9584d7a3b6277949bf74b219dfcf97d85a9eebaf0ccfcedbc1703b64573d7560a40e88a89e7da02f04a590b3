{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/alexandredroulez/Desktop/auto-ecole/src/components/Input/index.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport { ContainerGenericInput, StyledInput, StyledLabel, StyledImage } from './styledComponents';\nimport show from '../../../assets/svg/eye.svg';\nimport notShow from '../../../assets/svg/show.svg';\n\nvar GenericInput = function GenericInput(_ref) {\n  _s();\n\n  var label = _ref.label,\n      name = _ref.name,\n      _ref$type = _ref.type,\n      type = _ref$type === void 0 ? 'text' : _ref$type,\n      required = _ref.required,\n      minLength = _ref.minLength,\n      maxLength = _ref.maxLength,\n      placeholder = _ref.placeholder,\n      useForm = _ref.useForm,\n      id = _ref.id;\n\n  var _useState = useState(false),\n      showPassword = _useState[0],\n      setShowPassword = _useState[1];\n\n  return /*#__PURE__*/_jsxDEV(ContainerGenericInput, {\n    children: [/*#__PURE__*/_jsxDEV(StyledInput, _objectSpread({\n      ref: name,\n      type: showPassword === false ? type : 'text',\n      id: id,\n      name: name,\n      required: required,\n      minLength: minLength,\n      maxLength: maxLength,\n      placeholder: placeholder\n    }, useForm.register(\"\".concat(name), {\n      required: required,\n      maxLength: 80\n    })), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(StyledLabel, {\n      htmlFor: name,\n      onClick: function onClick() {\n        return focus(name);\n      },\n      children: [label, type === 'password' && /*#__PURE__*/_jsxDEV(StyledImage, {\n        src: showPassword ? show : notShow,\n        onClick: function onClick() {\n          return setShowPassword(!showPassword);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(GenericInput, \"daguiRHWMFkqPgCh/ppD7CF5VuQ=\");\n\n_c = GenericInput;\nexport default GenericInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"GenericInput\");","map":{"version":3,"sources":["/Users/alexandredroulez/Desktop/auto-ecole/src/components/Input/index.js"],"names":["React","useState","ContainerGenericInput","StyledInput","StyledLabel","StyledImage","show","notShow","GenericInput","label","name","type","required","minLength","maxLength","placeholder","useForm","id","showPassword","setShowPassword","register","focus"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,qBAAT,EAAgCC,WAAhC,EAA6CC,WAA7C,EAA0DC,WAA1D,QAA6E,oBAA7E;AACA,OAAOC,IAAP,MAAiB,6BAAjB;AACA,OAAOC,OAAP,MAAoB,8BAApB;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe,OAUf;AAAA;;AAAA,MATJC,KASI,QATJA,KASI;AAAA,MARJC,IAQI,QARJA,IAQI;AAAA,uBAPJC,IAOI;AAAA,MAPJA,IAOI,0BAPG,MAOH;AAAA,MANJC,QAMI,QANJA,QAMI;AAAA,MALJC,SAKI,QALJA,SAKI;AAAA,MAJJC,SAII,QAJJA,SAII;AAAA,MAHJC,WAGI,QAHJA,WAGI;AAAA,MAFJC,OAEI,QAFJA,OAEI;AAAA,MADJC,EACI,QADJA,EACI;;AAAA,kBACoChB,QAAQ,CAAC,KAAD,CAD5C;AAAA,MACGiB,YADH;AAAA,MACiBC,eADjB;;AAEJ,sBACE,QAAC,qBAAD;AAAA,4BACE,QAAC,WAAD;AACE,MAAA,GAAG,EAAET,IADP;AAEE,MAAA,IAAI,EAAEQ,YAAY,KAAK,KAAjB,GAAyBP,IAAzB,GAAgC,MAFxC;AAGE,MAAA,EAAE,EAAEM,EAHN;AAIE,MAAA,IAAI,EAAEP,IAJR;AAKE,MAAA,QAAQ,EAAEE,QALZ;AAME,MAAA,SAAS,EAAEC,SANb;AAOE,MAAA,SAAS,EAAEC,SAPb;AAQE,MAAA,WAAW,EAAEC;AARf,OASMC,OAAO,CAACI,QAAR,WAAoBV,IAApB,GAA4B;AAAEE,MAAAA,QAAQ,EAARA,QAAF;AAAYE,MAAAA,SAAS,EAAE;AAAvB,KAA5B,CATN;AAAA;AAAA;AAAA;AAAA,aADF,eAYE,QAAC,WAAD;AAAa,MAAA,OAAO,EAAEJ,IAAtB;AAA4B,MAAA,OAAO,EAAE;AAAA,eAAMW,KAAK,CAACX,IAAD,CAAX;AAAA,OAArC;AAAA,iBACGD,KADH,EAEGE,IAAI,KAAK,UAAT,iBACC,QAAC,WAAD;AACE,QAAA,GAAG,EAAEO,YAAY,GAAGZ,IAAH,GAAUC,OAD7B;AAEE,QAAA,OAAO,EAAE;AAAA,iBAAMY,eAAe,CAAC,CAACD,YAAF,CAArB;AAAA;AAFX;AAAA;AAAA;AAAA;AAAA,eAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,aAZF;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AAwBD,CApCD;;GAAMV,Y;;KAAAA,Y;AAsCN,eAAeA,YAAf","sourcesContent":["import React, { useState } from 'react';\nimport { ContainerGenericInput, StyledInput, StyledLabel, StyledImage } from './styledComponents';\nimport show from '../../../assets/svg/eye.svg';\nimport notShow from '../../../assets/svg/show.svg';\n\nconst GenericInput = ({\n  label,\n  name,\n  type = 'text',\n  required,\n  minLength,\n  maxLength,\n  placeholder,\n  useForm,\n  id,\n}) => {\n  const [showPassword, setShowPassword] = useState(false);\n  return (\n    <ContainerGenericInput>\n      <StyledInput\n        ref={name}\n        type={showPassword === false ? type : 'text'}\n        id={id}\n        name={name}\n        required={required}\n        minLength={minLength}\n        maxLength={maxLength}\n        placeholder={placeholder}\n        {...useForm.register(`${name}`, { required, maxLength: 80 })}\n      />\n      <StyledLabel htmlFor={name} onClick={() => focus(name)}>\n        {label}\n        {type === 'password' && (\n          <StyledImage\n            src={showPassword ? show : notShow}\n            onClick={() => setShowPassword(!showPassword)}\n          />\n        )}\n      </StyledLabel>\n    </ContainerGenericInput>\n  );\n};\n\nexport default GenericInput;\n"]},"metadata":{},"sourceType":"module"}