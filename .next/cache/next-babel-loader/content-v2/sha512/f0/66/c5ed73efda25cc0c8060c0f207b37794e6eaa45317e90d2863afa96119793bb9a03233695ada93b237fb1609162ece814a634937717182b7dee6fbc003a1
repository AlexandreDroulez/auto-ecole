{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/alexandredroulez/Desktop/auto-ecole/src/components/Form/Connect/index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n// import React from 'react';\n// import { useForm } from 'react-hook-form';\n//\n// import { ContainerForm } from './styledComponents';\n// import GenericInput from '../../Input';\n// import Button from '../../Button';\n//\n// const ConnectForm = () => {\n//   const reactHookForm = useForm();\n//   const onSubmit = data => console.log(data);\n//   console.log(reactHookForm.errors);\n//\n//   return (\n//     <ContainerForm onSubmit={reactHookForm.handleSubmit(onSubmit)}>\n//       <GenericInput label=\"Nom\" placeholder=\"Nom\" useForm={reactHookForm} />\n//       <GenericInput label=\"Prénom\" placeholder=\"Prénom\" useForm={reactHookForm} />\n//       <GenericInput label=\"Date\" placeholder=\"Date\" useForm={reactHookForm} />\n//       <GenericInput label=\"Adresse\" placeholder=\"Adresse\" useForm={reactHookForm} />\n//       <GenericInput\n//         label=\"Mot De Passe\"\n//         placeholder=\"Mot De Passe\"\n//         type=\"password\"\n//         useForm={reactHookForm}\n//       />\n//       <input type=\"submit\" />\n//       <Button margin=\"1rem\" textAlign=\"center\" type=\"submit\">\n//         Valider\n//       </Button>\n//     </ContainerForm>\n//   );\n// };\n// export default ConnectForm;\nimport React from 'react';\nimport { useForm } from 'react-hook-form';\nexport default function App() {\n  const {\n    register,\n    handleSubmit,\n    watch,\n    formState: {\n      errors\n    }\n  } = useForm();\n\n  const onSubmit = data => console.log(data);\n\n  console.log(watch('example')); // watch input value by passing the name of it\n\n  return (\n    /*#__PURE__*/\n\n    /* \"handleSubmit\" will validate your inputs before invoking \"onSubmit\" */\n    _jsxDEV(\"form\", {\n      onSubmit: handleSubmit(onSubmit),\n      children: [/*#__PURE__*/_jsxDEV(\"input\", _objectSpread({\n        defaultValue: \"test\"\n      }, register('example')), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", _objectSpread({}, register('exampleRequired', {\n        required: true\n      })), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }, this), errors.exampleRequired && /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"This field is required\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 34\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }, this)\n  );\n}","map":{"version":3,"sources":["/Users/alexandredroulez/Desktop/auto-ecole/src/components/Form/Connect/index.js"],"names":["React","useForm","App","register","handleSubmit","watch","formState","errors","onSubmit","data","console","log","required","exampleRequired"],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,iBAAxB;AAEA,eAAe,SAASC,GAAT,GAAe;AAC5B,QAAM;AACJC,IAAAA,QADI;AAEJC,IAAAA,YAFI;AAGJC,IAAAA,KAHI;AAIJC,IAAAA,SAAS,EAAE;AAAEC,MAAAA;AAAF;AAJP,MAKFN,OAAO,EALX;;AAMA,QAAMO,QAAQ,GAAGC,IAAI,IAAIC,OAAO,CAACC,GAAR,CAAYF,IAAZ,CAAzB;;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAYN,KAAK,CAAC,SAAD,CAAjB,EAT4B,CASG;;AAE/B;AAAA;;AACE;AACA;AAAM,MAAA,QAAQ,EAAED,YAAY,CAACI,QAAD,CAA5B;AAAA,8BAEE;AAAO,QAAA,YAAY,EAAC;AAApB,SAA+BL,QAAQ,CAAC,SAAD,CAAvC;AAAA;AAAA;AAAA;AAAA,cAFF,eAKE,mCAAWA,QAAQ,CAAC,iBAAD,EAAoB;AAAES,QAAAA,QAAQ,EAAE;AAAZ,OAApB,CAAnB;AAAA;AAAA;AAAA;AAAA,cALF,EAOGL,MAAM,CAACM,eAAP,iBAA0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAP7B,eASE;AAAO,QAAA,IAAI,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA,cATF;AAAA;AAAA;AAAA;AAAA;AAAA;AAFF;AAcD","sourcesContent":["// import React from 'react';\n// import { useForm } from 'react-hook-form';\n//\n// import { ContainerForm } from './styledComponents';\n// import GenericInput from '../../Input';\n// import Button from '../../Button';\n//\n// const ConnectForm = () => {\n//   const reactHookForm = useForm();\n//   const onSubmit = data => console.log(data);\n//   console.log(reactHookForm.errors);\n//\n//   return (\n//     <ContainerForm onSubmit={reactHookForm.handleSubmit(onSubmit)}>\n//       <GenericInput label=\"Nom\" placeholder=\"Nom\" useForm={reactHookForm} />\n//       <GenericInput label=\"Prénom\" placeholder=\"Prénom\" useForm={reactHookForm} />\n//       <GenericInput label=\"Date\" placeholder=\"Date\" useForm={reactHookForm} />\n//       <GenericInput label=\"Adresse\" placeholder=\"Adresse\" useForm={reactHookForm} />\n//       <GenericInput\n//         label=\"Mot De Passe\"\n//         placeholder=\"Mot De Passe\"\n//         type=\"password\"\n//         useForm={reactHookForm}\n//       />\n//       <input type=\"submit\" />\n//       <Button margin=\"1rem\" textAlign=\"center\" type=\"submit\">\n//         Valider\n//       </Button>\n//     </ContainerForm>\n//   );\n// };\n\n// export default ConnectForm;\nimport React from 'react';\nimport { useForm } from 'react-hook-form';\n\nexport default function App() {\n  const {\n    register,\n    handleSubmit,\n    watch,\n    formState: { errors },\n  } = useForm();\n  const onSubmit = data => console.log(data);\n\n  console.log(watch('example')); // watch input value by passing the name of it\n\n  return (\n    /* \"handleSubmit\" will validate your inputs before invoking \"onSubmit\" */\n    <form onSubmit={handleSubmit(onSubmit)}>\n      {/* register your input into the hook by invoking the \"register\" function */}\n      <input defaultValue=\"test\" {...register('example')} />\n\n      {/* include validation with required or other standard HTML validation rules */}\n      <input {...register('exampleRequired', { required: true })} />\n      {/* errors will return when field validation fails  */}\n      {errors.exampleRequired && <span>This field is required</span>}\n\n      <input type=\"submit\" />\n    </form>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}